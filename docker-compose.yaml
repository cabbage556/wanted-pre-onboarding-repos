services:
    api:
        container_name: api
        build:
            context: .
            dockerfile: DockerFile
        volumes:
            - ./src:/api/src
        restart: always
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
        depends_on:
            - dev_db
        networks:
            - container-network

    dev_db:
        image: postgres
        container_name: db
        environment:
            POSTGRES_USER: ${POSTGRESQL_USER}
            POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
            POSTGRES_DB: ${POSTGRESQL_DATABASE}
        restart: always
        ports:
            - ${POSTGRESQL_PORT}:${POSTGRESQL_PORT}
        networks:
            - container-network
        #healthcheck:
        #    test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
        #    timeout: 20s
        #    retries: 10
volumes:
    postgres:
        driver: cio
        driver_opts:
            profile: 'POSTGRESQL'

networks:
    container-network:
        driver: bridge
