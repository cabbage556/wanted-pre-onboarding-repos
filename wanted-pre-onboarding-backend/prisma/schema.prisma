generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-arm64-openssl-3.0.x"]
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 회사 모델
model Company {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(30) @unique
  nationality String @db.VarChar(30)
  region      String @db.VarChar(30)

  jobPostings JobPosting[] // one-to-many(Company - JobPosting)
}

// 채용공고 모델
model JobPosting {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  position  String   @db.VarChar(100)
  stack     String?  @db.VarChar(100)
  rewards   Int      @default(0)

  companyId Int
  company   Company @relation(fields: [companyId], references: [id])

  applications Application[] // one-to-many(JobPosting - Application)
}

// 사용자 모델
model User {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(100)
  phone String @db.Char(11)
  email String @unique @db.VarChar(100)

  applications Application[] // one-to-many(User - Application)
}

// 지원내역 모델
model Application {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  jobPostingId Int
  jobPosting   JobPosting @relation(fields: [jobPostingId], references: [id], onDelete: Cascade) // 채용공고 삭제 - 지원내역 삭제

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@unique([jobPostingId, userId]) // 1회 지원 가능
}
